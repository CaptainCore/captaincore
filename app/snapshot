#!/bin/bash

##
##		Creates Snapshot of website
##
## 		Pass arguments from command line like this
##		captaincore snapshot anchorhost --email=austin@anchor.host --skip-remote
##

# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source $root_path/config

website=$1

# Loop through arguments and seperate regular arguments from flags (--flag)
for var in "$@"
do
	# If starts with "--" then assign it to a flag array
    if [[ $var == --* ]]
    then
    	count=1+${#flags[*]}
    	flags[$count]=$var
    # Else assign to an arguments array
    else
    	count=1+${#arguments[*]}
    	arguments[$count]=$var
    fi
done

# Loop through flags and assign to varible. A flag "--email=austin@anchor.host" becomes $email
for i in "${!flags[@]}"
do

	# replace "-" with "_" and remove leading "--"
	flag_name=`echo ${flags[$i]} | tr - _`
	flag_name=`echo $flag_name | cut -c 3-`

	# detected flag contains data
	if [[ $flag_name == *"="* ]]; then
	  flag_value=`echo $flag_name | perl -n -e '/.+?=(.+)/&& print $1'` # extract value
	  flag_name=`echo $flag_name | perl -n -e '/(.+)?=.+/&& print $1'` # extract name
	  declare "$flag_name"="$flag_value" # assigns to $flag_flagname
	else
	  # assigns to $flag_flagname boolen
	  declare "$flag_name"=true
	fi

done

if [ $# -gt 0 ]
then

	snapshot_website() {
	domain=`captaincore config get $website --field=domain`

	## Return error if domain not found
	if [[ "$domain" == "" ]]; then
		echo "Can't locate website for install $website"
		return 1
	fi

	## Generates snapshot archive
	timedate=$(date +%Y-%m-%d)
	cd ~/Backup/
	zip -r $path_tmp/$domain-$timedate.zip $domain/ --exclude=$domain/_wpeprivate/\* --exclude=\*.git\* --exclude=$domain/wp-content/advanced-cache.php --exclude=$domain/wp-content/mu-plugins/mu-plugin.php --exclude=$domain/wp-content/mu-plugins/kinsta-mu-plugins.php --exclude=$domain/wp-content/mu-plugins/kinsta-mu-plugins/\* --exclude=$domain/wp-content/mu-plugins/slt-force-strong-passwords.php --exclude=$domain/wp-content/mu-plugins/force-strong-passwords/\* --exclude=$domain/wp-content/mu-plugins/wpengine-common/\*

	## Grab snapshot size in bytes
	if [[ "$OSTYPE" == "linux-gnu" ]]; then
      ### Begin folder size in bytes without apparent-size flag
      snapshot_size=`du -s --block-size=1 $path_tmp/$domain-$timedate.zip`
      snapshot_size=`echo $snapshot_size | cut -d' ' -f 1`

	elif [[ "$OSTYPE" == "darwin"* ]]; then
      ### Calculate folder size in bytes http://superuser.com/questions/22460/how-do-i-get-the-size-of-a-linux-or-mac-os-x-directory-from-the-command-line
      snapshot_size=`find $path_tmp/$domain-$timedate.zip -type f -print0 | xargs -0 stat -f%z`
	fi

  if [[ $skip_remote != true ]]; then

  	## Moves snapshot to Backblaze archive folder
  	rclone move $path_tmp/$domain-$timedate.zip Anchor-B2:AnchorHostBackup/Snapshots/$domain/

  	## Post snapshot to ACF field
    if [[ $captaincore_dev == true ]]; then
      curl "https://dev.anchor/anchor-api/$domain/?storage=$snapshot_size&archive=$domain-$timedate.zip&email=$email&token=$token"
    else
      curl "https://anchor.host/anchor-api/$domain/?storage=$snapshot_size&archive=$domain-$timedate.zip&email=$email&token=$token"
    fi

  fi

	if [[ $delete_after_snapshot == true ]]; then
		echo "Removed files after snapshot"
		## Removed from rclone
		rclone config delete sftp-$website
		rclone config delete sftp-$website-staging
		## Removes directory from backup server
		rm -rf ~/Backup/$domain
		## Process the removed logins
		captaincore config process
	fi
	}
	snapshot_website

fi
