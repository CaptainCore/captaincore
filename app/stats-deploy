#!/usr/bin/env bash

#
#   Generates and deploys Fathom tracker
#
#   `captaincore stats-deploy <site> <fathom-site-id>`
#
#   For multisite networks mutiple tracking codes can be WordPress passed in the following JSON format
#   '[{"domain":"site123.com","code":"ABCDE"},{"domain":"site346.com","code":"ABCDF"}]'
#
#   [--debug]
#   Debug mode
#

# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source ${root_path}lib/arguments

run_command() {

  site=$1

  # Extract environment
	if [[ "$site" == *"-staging"* ]]; then
		environment=staging
	else
		environment=production
	fi

  code=$( echo $2 | sed "s/'//g" )

  if [[ $site == "" ]]; then
    echo -e "${COLOR_RED}Error:${COLOR_NORMAL} Please specify a site."
    return 1
  fi

  if [[ $code == "" ]]; then
    echo -e "${COLOR_RED}Error:${COLOR_NORMAL} Please specify a fathom site id."
    return 1
  fi

  if [[ $tracker == "" ]]; then
    tracker=$captaincore_tracker
  fi

  if [[ "$debug" == "true" ]]; then
    echo "captaincore ssh $site --script=deploy-fathom --tracker=$tracker --id=\"$code\" --branding_author=\"$captaincore_branding_author\" --branding_author_uri=\"$captaincore_branding_author_uri\" --branding_slug=$captaincore_branding_slug --captain_id=$captain_id"
    return 1
  fi

  # Workaround inconstancy when passing JSON as an argument with WPE. Use Base64 to preserve line breaks through SSH as argument.
  fathom_arguments="tracker=$tracker\n id=$code\n branding_author=$captaincore_branding_author\n branding_author_uri=$captaincore_branding_author_uri\n branding_slug=$captaincore_branding_slug"

  read -r -d '' php_code << heredoc
\$arguments = <<<PHPHEREDOC
$fathom_arguments
PHPHEREDOC;

echo base64_encode( \$arguments );
heredoc

  fathom_arguments=$( php -r "$php_code" )

  captaincore ssh $site --script=deploy-fathom --fathom_arguments="$fathom_arguments" --captain_id=$captain_id
    
  # Load site configs
	while read site_configs; do if [[ $site_configs == "" ]]; then continue; fi; declare "$site_configs"; done <<< "$(captaincore site get $site --bash --captain_id=$captain_id)"

  # Store updated info in WordPress datastore
	cd ${root_path}data
  if [[ "$environment" == "production" ]]; then 
	  wp --quiet post meta update $id fathom $code
  fi
  if [[ "$environment" == "staging" ]]; then 
    wp --quiet post meta update $id fathom_staging $code
  fi


}
run_command ${arguments[*]}
