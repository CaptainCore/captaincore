#!/usr/bin/env bash

#
#   Removes a site from CaptainCore CLI.
#
#   `captaincore site delete <site>`
#

if [ ${#@} -ne 1 ]; then
  echo -e "${COLOR_RED}Error:${COLOR_NORMAL} Please specify a site."
  exit
fi

while read config; do
  if [[ "$config" == "Error:"* ]]; then
    continue
  fi
  declare "$config"
done <<< "$(php ${CAPTAINCORE_PATH}/lib/local-scripts/configs.php fetch)"

site=$1

if [[ "$site" == "" ]]; then
	echo -e "${COLOR_RED}Error:${COLOR_NORMAL} Please specify one a site."
	return 1
fi

run_command() {

	cd ${CAPTAINCORE_PATH}/data

	verify=$( captaincore site get $site --captain-id=$CAPTAIN_ID )

	if [[ "$verify" == "" ]]; then
		echo -e "${COLOR_RED}Error:${COLOR_NORMAL} Site '$site' not found in CaptainCore."
		return 1
	fi

	# Final snapshot then remove site related files
	captaincore snapshot generate $site --delete-after-snapshot --email=$captaincore_admin_email --captain-id=$CAPTAIN_ID

	# Load site configs
	while read site_configs; do if [[ $site_configs == "" ]]; then continue; fi; declare "$site_configs"; done <<< "$(captaincore site get $site --bash --captain-id=$CAPTAIN_ID)"

	if [[ "$site" != "" ]] && [[ "$site_id" != "" ]]; then
		wp eval-file ../lib/local-scripts/site-delete.php site_id=$site_id
	fi

	# Update configs
	captaincore configs update-websites --captain-id=$CAPTAIN_ID

}

run_command