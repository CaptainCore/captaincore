#!/usr/bin/env bash

#
#   Updates a site in CaptainCore CLI.
#
#   `captaincore site update <site> --id=<id> --domain=<domain> --username=<username> --password=<password> --address=<address> --protocol=<protocol> --port=<port> --staging_username=<staging_username> --staging_password=<staging_password> --staging_address=<staging_address> --staging_protocol=<staging_protocol> --staging_port=<staging_port> [--preloadusers=<preloadusers>] [--home_directory=<home_directory>] [--s3accesskey=<s3accesskey>] [--s3secretkey=<s3secretkey>] [--s3bucket=<s3bucket>] [--s3path=<s3path>]`
#
#    [--skip-extras]
#

# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source ${root_path}lib/arguments

run_command() {

	site=$1

	# Remove leading "--" from flags
	for i in "${!flags[@]}"; do
		flags[$i]=`echo ${flags[$i]} | cut -c 3-`
	done

	cd ${root_path}data
	wp eval-file ../lib/local-scripts/site-update.php site=$site ${flags[@]}

	if [[ "$skip_extras" != "true" ]]; then

		# Generate rclone keys
		captaincore rclone-configs $site --captain_id=$captain_id

		# Prep site without deploying plugins or users (in background)
		captaincore prep $site --skip-deployment --captain_id=$captain_id

	fi

}

# See if any sites are specifed
if [ ${#arguments[*]} -eq 1 ]; then
  # Runs on specifed sites
  run_command ${arguments[*]}
fi

# Error if no sites specifed
if [ ${#arguments[*]} -eq 0 ]; then
  echo -e "${COLOR_RED}Error:${COLOR_NORMAL} Please specify a site."
fi