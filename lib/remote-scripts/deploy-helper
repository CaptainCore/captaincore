#!/usr/bin/env bash

#
#   Deploy Helper plugin
#
#   `deploy-helper`
#

# Loop through arguments and separate regular arguments from flags
for arg in "$@"; do

  # Add to arguments array. (Does not starts with "--")
  if [[ $arg != --* ]]; then
    count=1+${#arguments[*]}
    arguments[$count]=$arg
    continue
  fi

  # Remove leading "--"
  flag_name=$( echo $arg | cut -c 3- )

  # Add to flags array
  count=1+${#flags[*]}
  flags[$count]=$arg

  # Process flags without data (Assign to variable)
  if [[ $arg != *"="* ]]; then
    flag_name=${flag_name//-/_}
    declare "$flag_name"=true
  fi

  # Process flags with data (Assign to variable)
  if [[ $arg == *"="* ]]; then
    flag_value=$( echo $flag_name | perl -n -e '/.+?=(.+)/&& print $1' ) # extract value
    flag_name=$( echo $flag_name | perl -n -e '/(.+?)=.+/&& print $1' ) # extract name
    flag_name=${flag_name/-/_}

    # Remove first and last quote if found
    flag_value="${flag_value%\"}"
    flag_value="${flag_value#\"}"

    declare "$flag_name"="$flag_value"
    continue
  fi

done

if [[ "$wp_content" == "" ]]; then
	wp_content="wp-content"
fi

# Generate must-use plugin
read -r -d '' build_mu_plugin << 'heredoc'
<?php
/**
 * Plugin Name: CaptainCore Helper
 * Plugin URI: https://captaincore.io
 * Description: Collection of helper functions for CaptainCore
 * Version: 0.2.1
 * Author: CaptainCore
 * Author URI: https://captaincore.io
 * Text Domain: captaincore-helper
 */

/**
 * Registers AJAX callback for quick logins
 */
function captaincore_quick_login_action_callback() {

	$post = json_decode( file_get_contents( 'php://input' ) );

	// Error if token not valid
	if ( ! isset( $post->token ) || $post->token != md5( AUTH_KEY ) ) {
		return new WP_Error( 'token_invalid', 'Invalid Token', [ 'status' => 404 ] );
		wp_die();
	}

	$count = 1;

	$user   = get_user_by( 'login', $post->user_login );
	$tokens = $new_tokens = [];

	for ( $i = 0; $i < $count; $i++ ) {
		$password     = wp_generate_password();
		$token        = sha1( $password );
		$tokens[]     = $token;
		$new_tokens[] = $token;
	}

	update_user_meta( $user->ID, 'captaincore_login_token', $tokens );
	foreach ( $new_tokens as $token ) {
		$query_args = [
			'user_id'                 => $user->ID,
			'captaincore_login_token' => $token,
		];
		$home_url     = home_url();
		$login_url    = trim( $home_url, "/" ) . "/wp-login.php";
		$one_time_url = add_query_arg( $query_args, $login_url );
	}

	echo $one_time_url;

	wp_die();

}

add_action( 'wp_ajax_nopriv_captaincore_quick_login', 'captaincore_quick_login_action_callback' );

/**
 * Login a request in as a user if the token is valid.
 */
function captaincore_login_handle_token() {
	global $pagenow;

	if ( 'wp-login.php' !== $pagenow || empty( $_GET['user_id'] ) || empty( $_GET['captaincore_login_token'] ) ) {
		return;
	}

	if ( is_user_logged_in() ) {
		$error = sprintf( __( 'Invalid one-time login token, but you are logged in as \'%1$s\'. <a href="%2$s">Go to the dashboard instead</a>?', 'captaincore-login' ), wp_get_current_user()->user_login, admin_url() );
	} else {
		$error = sprintf( __( 'Invalid one-time login token. <a href="%s">Try signing in instead</a>?', 'captaincore-login' ), wp_login_url() );
	}

	// Use a generic error message to ensure user ids can't be sniffed
	$user = get_user_by( 'id', (int) $_GET['user_id'] );
	if ( ! $user ) {
		wp_die( $error );
	}

	$tokens   = get_user_meta( $user->ID, 'captaincore_login_token', true );
	$tokens   = is_string( $tokens ) ? [ $tokens ] : $tokens;
	$is_valid = false;
	foreach ( $tokens as $i => $token ) {
		if ( hash_equals( $token, $_GET['captaincore_login_token'] ) ) {
			$is_valid = true;
			unset( $tokens[ $i ] );
			break;
		}
	}

	if ( ! $is_valid ) {
		wp_die( $error );
	}

	update_user_meta( $user->ID, 'captaincore_login_token', $tokens );
	wp_set_auth_cookie( $user->ID, true, is_ssl() );
	wp_safe_redirect( admin_url() );
	exit;

}

add_action( 'init', 'captaincore_login_handle_token' );
heredoc

echo "Generating '$wp_content/mu-plugins/captaincore-helper.php'"
echo "$build_mu_plugin" > $wp_content/mu-plugins/captaincore-helper.php
