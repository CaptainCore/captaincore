#!/bin/bash

#
#   Migrate site from backup snapshot
#
#   `migrate --url=<backup-url>`
#
#   [--update-urls]
#   Update urls to destination WordPress site. Default will keep source urls.
#

# Loop through arguments and separate regular arguments from flags (--flag)
for var in "$@"; do

  # If starts with "--" then assign it to a flag array
  if [[ $var == --* ]]; then
    count=1+${#flags[*]}
    flags[$count]=$var
    # Else assign to an arguments array
  else
    count=1+${#arguments[*]}
    arguments[$count]=$var
  fi

done

# Loop through flags and assign to variable. A flag "--email=my-email@my-site.com" becomes $email
for i in "${!flags[@]}"; do

  # replace "-" with "_" and remove leading "--"
  flag_name=`echo ${flags[$i]} | cut -c 3-`

  # detected flag contains data
  if [[ $flag_name == *"="* ]]; then
    flag_value=`echo $flag_name | perl -n -e '/.+?=(.+)/&& print $1'` # extract value
    flag_name=`echo $flag_name | perl -n -e '/(.+?)=.+/&& print $1'` # extract name
    flag_name=${flag_name/-/_}
    declare "$flag_name"="$flag_value" # assigns to $flag_flagname
  else
    # assigns to $flag_flagname boolen
    flag_name=${flag_name//-/_}
    declare "$flag_name"=true
  fi

done

backup_url=$url
backupformat=`echo $backup_url | perl -n -e '/.+\.(.+)/&& print $1'`

# Store current path
homedir=$(pwd)

migrate_website() {

  # Find private folder
  if [ -d "_wpeprivate" ]; then
    private=${homedir}/_wpeprivate
  elif [ -d "../private" ]; then
    cd ../private
    private=$(pwd)
    cd $homedir
  else
    echo "Can't find private folder '/_wpeprivate' or '../private'. Migration cancelled.";
    return 1
  fi

  # Verifies WordPress
  wp_home=$(wp option get home --skip-themes --skip-plugins)
  if [[ "$wp_home" != "http"* ]]; then
    echo "WordPress not found. Migration cancelled.";
    return 1
  fi

  cd $private

  if [[ "$backup_url" == *"admin-ajax.php?action=pb_backupbuddy_backupbuddy&function=download_archive&backupbuddy_backup"* ]]; then
    echo "Backup Buddy URL found";
    backup_url=${backup_url/wp-admin\/admin-ajax.php?action=pb_backupbuddy_backupbuddy&function=download_archive&backupbuddy_backup=/wp-content\/uploads\/backupbuddy_backups/}
  fi

  # Downloads backup file
  wget --progress=bar:force:noscroll $backup_url
  if [[ "$backupformat" == "zip" ]]; then
    unzip -o *.zip -x "__MACOSX/*" -x "cgi-bin/*"
  fi
  if [[ "$backupformat" == "gz" ]]; then
    tar xvzf *.gz
  fi
  if [[ "$backupformat" == "tar" ]]; then
    tar xvzf *.tar
  fi

  # Finds WordPress path
  wordpresspath=`find * -type d -name 'wp-content' -print -quit`

  # Migrate uploads if found
  if [ -d $wordpresspath/uploads ]; then
    rm -rf $homedir/wp-content/uploads
    mv $wordpresspath/uploads $homedir/wp-content/
  fi

  # Migrate themes if found
  for d in $wordpresspath/themes/*/; do
		rm -rf $homedir/wp-content/themes/$( basename $d )
    mv $d $homedir/wp-content/themes/
  done

  # Migrate plugins if found
  for d in $wordpresspath/plugins/*/; do
		rm -rf $homedir/wp-content/plugins/$( basename $d )
    mv $d $homedir/wp-content/plugins/
  done

  cd $homedir

  # Remove select plugins if found
  wp plugin delete backupbuddy wp-super-cache adminer wordfence w3-total-cache wp-file-cache broken-link-checker yet-another-related-posts-plugin comet-cache-1 woothemes-updater ewww-image-optimizer https-redirection really-simple-ssl hello wordpress-php-info force-strong-passwords --skip-plugins --skip-themes

  # Outputs table prefix and updates if different
  cat $private/$wordpresspath/../wp-config.php | grep table_prefix
	table_prefix=$(cat $private/$wordpresspath/../wp-config.php | grep table_prefix | perl -n -e '/\047(.+)\047/&& print $1')
  cd $homedir
	current_table_prefix=$(wp config get table_prefix)
	if [[ "$table_prefix" != "$current_table_prefix" ]]; then
		wp config set table_prefix $table_prefix
	fi

  # Reset folder and file permissions
  find . -type d -exec chmod 755 {} \;
  find . -type f -exec chmod 644 {} \;
  chmod 600 $homedir/wp-content/mysql.sql

  echo "Found the following database:"
  find $homedir/wp-content/uploads $private -type f -name '*.sql'
  databases=$(find $private -type f -name '*.sql')
  database_count=$(echo -n $databases | grep -c '^')
	if [[ "$database_count" == "0" ]]; then
		# Expand db search
		 databases=$(find $homedir -type f -name '*.sql')
		 database_count=$(echo -n $databases | grep -c '^')
	fi
  if [[ "$database_count" -gt "0" ]]; then
    database_file=$(echo "$databases" | head -1)
    if [ -f "$database_file" ]; then
      wp db reset --yes
      wp db import $database_file
      wp cache flush --skip-plugins --skip-themes
      wp rewrite flush --skip-plugins --skip-themes
      wp_home_imported=$(wp option get home)
      if [[ "$update_urls" == "true" ]]; then
        wp search-replace $wp_home_imported $wp_home --skip-plugins --skip-themes --all-tables
      fi
      # convert MyISAM tables to InnoDB
      wp db query "SELECT CONCAT('ALTER TABLE ', TABLE_SCHEMA,'.', TABLE_NAME, ' ENGINE=InnoDB;') FROM information_schema.TABLES WHERE ENGINE = 'MyISAM'" --skip-column-names > db_optimize.sql
      wp db query < db_optimize.sql
      rm db_optimize.sql
    fi
  fi

}
migrate_website
