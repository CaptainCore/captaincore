#!/usr/bin/env bash

#
#   Preloading plugins to site
#
#   `captaincore deploy plugins <site>`
#

# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source ${root_path}lib/arguments

if [ $# -gt 0 ]; then
  echo "Loading specific sites"
  for (( i = 1; i <= $#; i++ )); do

    var="$i"
    site=${!var}


    # Load site configs
    eval $(captaincore site get $site --bash --captain_id=$captain_id)

    # Site found, start the backup
    if ! [ -z "$domain" ]; then

      # Pulls standard set of plugins from https://<captaincore_gui>/wp-json/captaincore/v1/client
      plugins=$(captaincore get config-from-api --field=preinstall_plugins)

      # Install standard set of plugins via WP-CLI (removing bundled hello plugin)
      captaincore ssh $site --command="wp plugin delete hello; wp plugin install $plugins --force"

      # Loads token
      website_token=$(captaincore site fetch-token $site --captain_id=$captain_id)

      # Load dynamic list of plugins for site
      plugins=`captaincore plugins-get --token=$website_token --customers=$preloadusers`

      # Build plugin urls
      plugin_urls=()

      # Loop through dynamic list of plugins
      for plugin in $plugins; do
        plugin_urls+=("$captaincore_gui/wp-content/plugins/${plugin}.zip")
      done

      # If plugin urls exist then install
      if [[ $plugin_urls != "" ]]; then
        echo "Installing $plugins";
        captaincore ssh $site --command="wp plugin install $plugin_urls"
      fi

    fi

    ### Clear out variables
    domain=''
    username=''
    password=''
    address=''
    protocol=''
    port=''

  done

fi
