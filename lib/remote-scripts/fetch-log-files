#!/usr/bin/env bash

#
#   Fetches list of server logs
#

read -r -d '' php_code << 'heredoc'
<?php
$debugger    = empty( WP_DEBUG ) ? false : WP_DEBUG;
$files       = [];
$home_path   = get_home_path();
$parent_path = dirname( $home_path );

if ( is_file( "${home_path}error_log" ) ) {
    $files[] = [
        "name"        => "error_log",
        "path"        => "${home_path}error_log",
        "created_at"  => filectime( "${home_path}error_log" ),
        "modified_at" => filemtime( "${home_path}error_log" ),
        "size"        => filesize( "${home_path}error_log" )
    ];
}

if ( is_file( "${home_path}wp-content/debug.log" ) ) {
    $files[] = [
        "name"        => "wp-content/debug.log",
        "path"        => "${home_path}wp-content/debug.log",
        "created_at"  => filectime( "${home_path}wp-content/debug.log" ),
        "modified_at" => filemtime( "${home_path}wp-content/debug.log" ),
        "size"        => filesize( "${home_path}wp-content/debug.log" )
    ];
}

foreach (glob("${parent_path}/access-logs/*_log") as $file) {
    if ( filesize( $file ) == 0 ) {
        continue;
    }
    $files[] = [
        "name"        => "~/access-logs/" . basename( $file ),
        "path"        => $file,
        "created_at"  => filectime( $file ),
        "modified_at" => filemtime( $file ),
        "size"        => filesize( $file )
    ];
}

foreach (glob("${parent_path}/logs/*.log") as $file) {
    if ( filesize( $file ) == 0 ) {
        continue;
    }
    $files[] = [
        "name"        => "~/logs/" . basename( $file ),
        "path"        => $file,
        "created_at"  => filectime( $file ),
        "modified_at" => filemtime( $file ),
        "size"        => filesize( $file )
    ];
}

$response = [
    "debugger" => $debugger,
    "files"    => $files
];


echo json_encode( $response, JSON_PRETTY_PRINT );
heredoc

echo "$php_code" | wp eval-file - 2>/dev/null