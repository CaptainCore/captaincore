#!/usr/bin/env bash

#
#   Preps new site configurations into logins via command line
#
#   `captaincore site prepare <site>`
#

# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source ${root_path}lib/arguments

site=$1

# Load site details
while read site_configs; do if [[ $site_configs == "" ]]; then continue; fi; declare "$site_configs"; done <<< "$(captaincore site get $site --bash --captain_id=$captain_id)"

# Deploy SSH keys
captaincore site deploy-keys ${site}-production --captain_id=$captain_id
captaincore site deploy-keys ${site}-staging --captain_id=$captain_id

# load custom configs into wp-config.php and .htaccess, setups up token
captaincore site deploy-init $site --captain_id=$captain_id
echo "load custom configs into wp-config.php and .htaccess"
echo "Setting up token"

# Generate new Fathom code if needed
if [[ $captaincore_tracker != "" ]] && [[ $fathom == "" ]]; then

  # Generate new Fathom tracking code, if needed
  captaincore site stats-generate ${site}-production --captain_id=$captain_id
  captaincore site stats-generate ${site}-staging --captain_id=$captain_id

fi

captaincore sync-data ${site}-production --captain_id=$captain_id
captaincore sync-data ${site}-staging --captain_id=$captain_id

# Update configs
captaincore configs update-websites --captain_id=$captain_id