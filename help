#!/usr/bin/env bash

ROOT_DIR=`dirname "$(perl -e 'use Cwd "abs_path"; print abs_path(shift)' $0)"`
CLI_ENTRYPOINT=`basename "$1"`

. "$ROOT_DIR/utils"

# If we don't have any additional help arguments, then show the app's
# header as well.
if [ $# == 1 ]; then
  bcli_show_header "$ROOT_DIR/app"
fi

# Locate the correct level to display the helpfile for, either a directory
# with no further arguments, or a command file.
HELP_FILE="$ROOT_DIR/app/"
HELP_ARG_START=2
while [[ -d "$HELP_FILE" && $HELP_ARG_START -le $# ]]; do
  HELP_FILE="$HELP_FILE/${!HELP_ARG_START}"
  HELP_ARG_START=$(($HELP_ARG_START+1))
done

max_length=0

# If we've got a directory's helpfile to show, then print out the list of
# commands in that directory along with its help content.
if [[ -d "$HELP_FILE" ]]; then
  # echo -e "${COLOR_GREEN}$CLI_ENTRYPOINT ${COLOR_CYAN}${@:2:$(($HELP_ARG_START-1))} ${COLOR_NORMAL}"

  # If there's a help file available for this directory, then show it.
  if [[ -f "$HELP_FILE/.help" ]]; then
    echo ""
    cat "$HELP_FILE/.help"
    echo ""
  fi

  echo ""
  echo -e "${COLOR_MAGENTA}Available Commands:${COLOR_NORMAL}"

  files=$( ls $HELP_FILE --group-directories-first )

  for file in $files; do
    cmd=`basename "$file"`
    if [ "${#cmd}" -gt "$max_length" ]; then
      max_length=${#cmd}
    fi
  done

  for file in $files; do
    cmd=`basename "$file"`
    file="$HELP_FILE$file"
    spacer=""
    adjusted_spaces=$(( $max_length - ${#cmd} ))
    for space in $( seq $adjusted_spaces ); do
      spacer="$spacer "
    done
    parent_cmd=${@:2:$(($HELP_ARG_START-1))}
    if [[ "$parent_cmd" != "" ]]; then
      parent_cmd=" $parent_cmd"
    fi

    # Don't show hidden files as available commands
    if [[ "$cmd" != .* && "$cmd" != *.php && "$cmd" != *.sh && "$cmd" != *.usage && "$cmd" != *.help ]]; then
      echo -en " ${COLOR_GREEN}${parent_cmd} $cmd ${COLOR_NORMAL}$spacer"

      if [[ -f "$file.help" ]]; then
        bcli_trim_whitespace "$(cat "$file.help")"
        echo ""
      elif [[ -d "$file" ]]; then
        echo -e "${COLOR_MAGENTA}Subcommand${COLOR_NORMAL}"
      else
        echo ""
      fi
    fi
  done

  echo ""
  echo 'Use "captaincore <command> --help" for more information about a command.'
  echo 'Use "captaincore <subcommand>" to see a list of commands.'
  exit 0
fi

echo -en "${COLOR_GREEN}$CLI_ENTRYPOINT ${COLOR_CYAN}${@:2:$(($HELP_ARG_START-1))} ${COLOR_NORMAL}"
if [[ -f "$HELP_FILE.usage" ]]; then
  bcli_trim_whitespace "$(cat "$HELP_FILE.usage")"
  echo ""
else
  echo ""
fi

if [[ -f "$HELP_FILE.help" ]]; then
  cat "$HELP_FILE.help"
  echo ""
fi
