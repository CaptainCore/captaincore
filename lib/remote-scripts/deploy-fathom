#!/usr/bin/env bash

#
#   Deploy Fathom
#
#   `deploy-fathom --tracker=<tracker-domain> --id=<site-id> --branding_author=<captaincore_branding_author> --branding_author_uri=<captaincore_branding_author_uri> --branding_slug=<captaincore_branding_slug>`
#

# Loop through arguments and separate regular arguments from flags
for arg in "$@"; do

  # Add to arguments array. (Does not starts with "--")
  if [[ $arg != --* ]]; then
    count=1+${#arguments[*]}
    arguments[$count]=$arg
    continue
  fi

  # Remove leading "--"
  flag_name=$( echo $arg | cut -c 3- )

  # Add to flags array
  count=1+${#flags[*]}
  flags[$count]=$arg

  # Process flags without data (Assign to variable)
  if [[ $arg != *"="* ]]; then
    flag_name=${flag_name//-/_}
    declare "$flag_name"=true
  fi

  # Process flags with data (Assign to variable)
  if [[ $arg == *"="* ]]; then
    flag_value=$( echo $flag_name | perl -n -e '/.+?=(.+)/&& print $1' ) # extract value
    flag_name=$( echo $flag_name | perl -n -e '/(.+?)=.+/&& print $1' ) # extract name
    flag_name=${flag_name/-/_}

    # Remove first and last quote if found
    flag_value="${flag_value%\"}"
    flag_value="${flag_value#\"}"
    
    declare "$flag_name"="$flag_value"
    continue
  fi

done

if [[ "$wp_content" == "" ]]; then
	wp_content="wp-content"
fi

fathom_arguments=$( echo $fathom_arguments | base64 --decode )
while read -r line; do
    declare "$line"
done <<< "$fathom_arguments"

read -r -d '' php_code << heredoc
\$ids = '$id';
\$ids = json_decode(\$ids);
if( is_array(\$ids) ) { 
  echo count( \$ids ); 
}
heredoc

tracker_count=$( php -r "$php_code" )

read -r -d '' php_code << heredoc
\$ids = '$id';
\$ids = json_decode(\$ids);
echo \$ids[0]->code;
heredoc

if [[ "$tracker_count" -eq "1" ]] || [[ "$tracker_count" == "" ]]; then

  id=$( php -r "$php_code" )

  # Generate must-use plugin
  read -r -d '' build_mu_plugin << heredoc
<?php
/**
 * Plugin Name: $branding_author Tracker
 * Description: Fathom Analytics tracking snippet for ${branding_author}'s Fathom account.
 * Version: 1.1.0
 * Author: $branding_author
 * Author URI: $branding_author_uri
 * Text Domain: ${branding_slug}-tracker
 */

function ${branding_slug}_fathom_tracker_snippet() {
    echo "<script src=\"https://cdn.usefathom.com/script.js\" data-site=\"$id\" defer></script>\n";
}
add_action( 'wp_head', '${branding_slug}_fathom_tracker_snippet', 50 );
heredoc

  if [ -f "$wp_content/mu-plugins/${branding_slug}-stats.php" ]; then
    echo "Removing legacy tracker '$wp_content/mu-plugins/${branding_slug}-stats.php'"
    rm $wp_content/mu-plugins/${branding_slug}-stats.php
  fi

  if [ -f "$wp_content/mu-plugins/${branding_slug}-tracker.js" ]; then
    echo "Removing legacy tracker '$wp_content/mu-plugins/${branding_slug}-tracker.js'"
    rm $wp_content/mu-plugins/${branding_slug}-tracker.js
  fi

  mkdir -p "$wp_content/mu-plugins/"
  echo "Generating '$wp_content/mu-plugins/${branding_slug}-tracker.php'"
  echo "$build_mu_plugin" > $wp_content/mu-plugins/${branding_slug}-tracker.php
  exit

fi

read -r -d '' php_code << heredoc
\$ids = '$id';
\$ids = json_decode(\$ids);
echo '\$fathom_site_ids = [';
echo "\n";
foreach (\$ids as \$id) { 
  echo '       "'.\$id->domain .'" => "'.\$id->code .'",';
  echo "\n";
}
echo "    ];";
heredoc

fathom_site_ids_code=$( php -r "$php_code" )

# Generate must-use plugin
read -r -d '' build_mu_plugin << heredoc
<?php
/**
 * Plugin Name: $branding_author Tracker
 * Description: Fathom Analytics tracking snippet for ${branding_author}'s Fathom account.
 * Version: 1.1.0
 * Author: $branding_author
 * Author URI: $branding_author_uri
 * Text Domain: ${branding_slug}-tracker
 */

function ${branding_slug}_fathom_print_js_snippet() {

  // Only run if multisite is active
  if ( function_exists('get_blog_details') ) {

    \$current_site = get_blog_details();

    $fathom_site_ids_code

    if ( array_key_exists( \$current_site->domain, \$fathom_site_ids ) ) {
      \$fathom_site_id = \$fathom_site_ids[\$current_site->domain];
      echo "<script src=\"https://cdn.usefathom.com/script.js\" data-site=\"\$fathom_site_id\" defer></script>\n";
    }
  }
}

add_action( 'wp_head', '${branding_slug}_fathom_print_js_snippet', 50 );
heredoc

if [ -f "$wp_content/mu-plugins/${branding_slug}-stats.php" ]; then
  echo "Removing legacy tracker '$wp_content/mu-plugins/${branding_slug}-stats.php'"
  rm $wp_content/mu-plugins/${branding_slug}-stats.php
fi

if [[ "$( ls $wp_content/mu-plugins/${branding_slug}-*tracker.js | wc -l  )" != "0" ]]; then
  echo "Removing existing trackers";
  rm $wp_content/mu-plugins/${branding_slug}-*tracker.js
fi

echo "Generating '$wp_content/mu-plugins/${branding_slug}-tracker.php'"
echo "$build_mu_plugin" > $wp_content/mu-plugins/${branding_slug}-tracker.php
