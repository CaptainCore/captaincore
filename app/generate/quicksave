#!/bin/bash

##
##		Creates Quicksave (plugins/themes) of website
##
## 		Pass arguments from command line like this
##		captaincore generate quicksave anchorhost --email=austin@anchor.host --skip-remote
##

# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source $root_path/config

website=$1

# Loop through arguments and separate regular arguments from flags (--flag)
for var in "$@"
do
	# If starts with "--" then assign it to a flag array
    if [[ $var == --* ]]
    then
    	count=1+${#flags[*]}
    	flags[$count]=$var
    # Else assign to an arguments array
    else
    	count=1+${#arguments[*]}
    	arguments[$count]=$var
    fi
done

# Loop through flags and assign to variable. A flag "--email=austin@anchor.host" becomes $email
for i in "${!flags[@]}"
do

	# replace "-" with "_" and remove leading "--"
	flag_name=`echo ${flags[$i]} | tr - _`
	flag_name=`echo $flag_name | cut -c 3-`

	# detected flag contains data
	if [[ $flag_name == *"="* ]]; then
	  flag_value=`echo $flag_name | perl -n -e '/.+?=(.+)/&& print $1'` # extract value
	  flag_name=`echo $flag_name | perl -n -e '/(.+)?=.+/&& print $1'` # extract name
	  declare "$flag_name"="$flag_value" # assigns to $flag_flagname
	else
	  # assigns to $flag_flagname boolen
	  declare "$flag_name"=true
	fi

done

if [ $# -gt 0 ]
then

	snapshot_website() {
	domain=`captaincore config get $website --field=domain`

	## Return error if domain not found
	if [[ "$domain" == "" ]]; then
		echo "Can't locate website for install $website"
		return 1
	fi

	## Generates snapshot archive
	timedate=$(date +%Y-%m-%d)
	cd ~/Backup/
	zip -r ~/Quicksaves/$domain-$timedate.zip $domain/ --include=$domain/wp-content/plugins/\* --include=$domain/wp-content/themes/\*

	## Store plugin json
	captaincore ssh $website "wp plugin list --format=json --skip-themes --skip-plugins --skip-packages" > ~/Quicksaves/$domain-$timedate.json

	}
	snapshot_website

fi
