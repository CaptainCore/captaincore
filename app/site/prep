#!/bin/bash

##
##		Pres new install configurations into logins via command line
##
## 		Pass arguments from command line like this
##		captaincore site prep <site>
##
##    Skip users and plugin deployment
##    captaincore site prep <site> --skip-deployment
##

# Loop through arguments and separate regular arguments from flags (--flag)
for var in "$@"
do
	# If starts with "--" then assign it to a flag array
    if [[ $var == --* ]]
    then
    	count=1+${#flags[*]}
    	flags[$count]=$var
    # Else assign to an arguments array
    else
    	count=1+${#arguments[*]}
    	arguments[$count]=$var
    fi
done

# Loop through flags and assign to variable. A flag "--email=austin@anchor.host" becomes $email
for i in "${!flags[@]}"
do

	# replace "-" with "_" and remove leading "--"
	flag_name=`echo ${flags[$i]} | tr - _`
	flag_name=`echo $flag_name | cut -c 3-`

	# detected flag contains data
	if [[ $flag_name == *"="* ]]; then
	  flag_value=`echo $flag_name | perl -n -e '/.+?=(.+)/&& print $1'` # extract value
	  flag_name=`echo $flag_name | perl -n -e '/(.+)?=.+/&& print $1'` # extract name
	  declare "$flag_name"="$flag_value" # assigns to $flag_flagname
	else
	  # assigns to $flag_flagname boolen
	  declare "$flag_name"=true
	fi

done

## Deploy SSH keys
captaincore deploy keys $1

## load custom configs into wp-config.php and .htaccess, setups up token
captaincore deploy init $1
echo "load custom configs into wp-config.php and .htaccess"
echo "Setting up token"

if [[ $skip_deployment != true ]]; then

  ## loads users
  captaincore deploy users $1
  echo "Preload Users"

  ## install plugins
  captaincore deploy plugins $1
  echo "Preload Plugins"

  ## run initial backup
  captaincore backup $1
  echo "Running Initial Backup"

fi
