#!/usr/bin/env bash

#
#   Calculates size of one or more sites.
#
#   `captaincore size`
#
#   [<site>...]
#   One or more sites to size.
#
#   [--all]
#   Size all sites.
#
#

# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source ${root_path}config
source ${root_path}lib/arguments

run_command() {

  INDEX=1
  for site in "$@"; do

    # Load site configs
    eval $(captaincore site get $site --bash)

    if [ -z "$domain" ]; then
      echo "Domain not found"
      return
    fi

    if [ "$home_directory" != "" ]; then
      home_directory="${home_directory}/"
    fi
    json="["
    size_production=$(rclone size sftp-$site:$home_directory --json)
    size_staging=$(rclone size sftp-$site-staging:$home_directory --json)
    json+="{\"name\":\"$site\","${size_production:1:${#size_production}}
    if [[ "$size_staging" != "" ]]; then
      json+=","
    fi
    json+="{\"name\":\"$site-staging\","${size_staging:1:${#size_staging}}
    json+="]"

    echo $json

    # Clear out variables
    domain=''
    username=''
    password=''
    address=''
    protocol=''
    port=''
    home_directory=''
    remoteserver=''
    s3bucket=''
    s3path=''
    subsite=''

    let INDEX=${INDEX}+1

  done

}

# See if any sites are specifed
if [ ${#arguments[*]} -gt 0 ]; then
  # Runs on specifed sites
  run_command ${arguments[*]}
fi

if [[ $all == "true" ]]; then
  # Runs on all sites
  run_command ${websites[@]}
fi

# Error if no sites specifed
if [[ $all != "true" ]] && [ ${#arguments[*]} -eq 0 ]; then
  echo -e "${COLOR_RED}Error:${COLOR_NORMAL} Please specify one or more sites, or use --all."
fi
