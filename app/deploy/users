#!/bin/bash

##
##      Deploys custom preloading users mu-plugin to batch of sites
##
##      Pass arguments from command line like this
##      captaincore deploy users <site> [<site>] [<site>]
##
##      The users argument determines which json file to load user data from
##


# Load configuration
root_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; root_path=${root_path%app*}
source $root_path/config

generate_admin () {
  for (( i = 1; i <= $#; i++ )); do

    var="$i"
    site=${!var}

    if [[ $site == *"="* ]]; then
      ## assume its a command and strip out the argument as the user group
      group=${site##*=}
    else
      ### Load FTP credentials
      eval $(captaincore site get $site --bash)

      ### Credentials found, start the backup
      if ! [ -z "$domain" ]; then

        ### Loads token
        website_token=$(captaincore get token $site)

        ### Generate JSON file based on preloaded list
        captaincore users-json --token=$website_token --customers=$preloadusers --site=$site

        ### Generate mu-plugin file based on a predefined user group
        captaincore users --site=$site --token=$website_token --customers=$preloadusers

        ### upload password plugin to mu-plugins
        rclone copy ~/Tmp/anchor_load_$site.php sftp-$site:${homedir}wp-content/mu-plugins/

        ### Trigger website to load password
        wget --no-cache --spider $address/wp-admin/
        sleep 1
        curl -Il $address/wp-login.php

        ## remove password plugin
        rclone delete sftp-$site:${homedir}wp-content/mu-plugins/anchor_load_$site.php

      fi

      ### Clear out variables
      domain=''
      username=''
      password=''
      address=''
      protocol=''
      port=''
    fi

  done

}

### See if any specific sites are selected
if [ $# -gt 0 ]; then
  ## Run selected site(s)
  generate_admin $*
fi
