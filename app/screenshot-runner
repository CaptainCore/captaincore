#!/usr/bin/env bash

#
#   Screenshots a single valid HTTP url.
#
#   `captaincore screenshot-runner <path-to-screenshot-folder>,<site-url>`
#
#   Used by `captaincore screenshot`. Not to be used directly.
#

# Vars
arguments=( ${1//,/ } )
path=${arguments[0]}
url=${arguments[1]}
remote=${arguments[2]}

run_command() {
  
  if [ -f gowitness.db ]; then
    rm gowitness.db
  fi
  echo "Generating screenshot for $url"
  bash_output=$( ( gowitness single --url="$url" --log-format=json --timeout=60 --destination="$path" ) 2>&1 | cat )

  # PHP script to parse and base64
  read -r -d '' php_code << heredoc
\$raw = <<< EOT
$bash_output
EOT;
\$array = explode("\n", \$raw );
foreach( \$array as \$line ) {
    \$json = json_decode( \$line );
    if ( \$json->msg == "Screenshot taken" ) {
        echo \$json->destination;
    }
}
heredoc

    new_screenshot=$( php -r "$php_code" )
    if [[ -f $new_screenshot ]]; then
      mv $new_screenshot ${path}screenshot.png
      convert ${path}screenshot.png -resize 100 ${path}screenshot-100.png
      convert ${path}screenshot.png -resize 800 ${path}screenshot-800.png
      rclone move ${path}screenshot-100.png $remote
      rclone move ${path}screenshot-800.png $remote
    fi

}
run_command

